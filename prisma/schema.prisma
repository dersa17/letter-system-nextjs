// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RoleUser {
  id   Int    @id @default(autoincrement())
  nama String @db.VarChar(25)

  users User[]
}

model Major {
  id String @id @db.VarChar(2)
  nama String @db.VarChar(18)
  createdAt  DateTime @db.Timestamp() @default(now())
  updatedAt  DateTime @db.Timestamp() @updatedAt @default(now())
  course Course[]
  users    User[]
}

model User {
  id        String   @id @db.VarChar(7)
  nama       String   @db.VarChar(100)
  email      String   @unique @db.VarChar(45)
  password   String  
  alamat     String   @db.VarChar(45)
  periode    String   @db.VarChar(20)
  status     String?  @db.VarChar(20)
  image      String?  
  createdAt  DateTime @db.Timestamp() @default(now())
  updatedAt  DateTime @db.Timestamp() @updatedAt @default(now())
  idRole     Int
  idMajor  String?  @db.VarChar(2)
  
  role       RoleUser @relation(fields: [idRole], references: [id])
  major    Major? @relation(fields: [idMajor], references: [id])
  pengajuanSurat PengajuanSurat[]

  moPengajuan        PengajuanSurat[] @relation("MO")
  kaprodiPengajuan   PengajuanSurat[] @relation("Kaprodi")
  notification Notification[] 
}

model Course {
  id    String   @id @db.VarChar(12)
  nama    String   @db.VarChar(100)
  sks     Int
  idMajor String @db.VarChar(2)
  createdAt  DateTime @db.Timestamp() @default(now())
  updatedAt  DateTime @db.Timestamp() @updatedAt @default(now())
  
  major  Major @relation(fields: [idMajor], references: [id])
  suratTugasMk SuratTugasMk[]
}

model PengajuanSurat {
  id               Int   @id @default(autoincrement()) 
  nrp              String    @db.VarChar(7)
  moNik            String?   @db.VarChar(7)
  kaprodiNik       String?   @db.VarChar(7)
  jenisSurat       String    @db.VarChar(33)
  status           String    @db.VarChar(25) @default("Pending")
  tanggalPengajuan DateTime  @db.Timestamp() @default(now())
  tanggalPersetujuan DateTime? @db.Timestamp()
  fileSurat        String?   @db.VarChar(255)
  tanggalUpload    DateTime? @db.Timestamp()
  user             User      @relation(fields: [nrp], references: [id])
  mo               User?     @relation("MO", fields: [moNik], references: [id])
  kaprodi          User?     @relation("Kaprodi", fields: [kaprodiNik], references: [id])

  suratTugasMk SuratTugasMk?
  suratMahasiswaAktif SuratMahasiswaAktif?
  suratKeteranganLulus SuratKeteranganLulus?
  laporanHasilStudi LaporanHasilStudi?

  notification Notification[]
}

model SuratTugasMk {
  id             Int       @id @default(autoincrement())
  tujuanInstansi String    @db.VarChar(255)
  periode        String?   @db.VarChar(20)
  dataMahasiswa  String    @db.VarChar(255)
  tujuan         String    @db.VarChar(255)
  topik          String    @db.VarChar(255)
  idPengajuan    Int       @unique 
  idCourse       String    @db.VarChar(12)
  
  pengajuanSurat PengajuanSurat @relation(fields: [idPengajuan], references: [id], onDelete: Cascade)
  course     Course     @relation(fields: [idCourse], references: [id])
}

model SuratMahasiswaAktif {
  id             Int       @id @default(autoincrement())
  namaLengkap    String    @db.VarChar(100)
  nrp            String    @db.VarChar(7)
  periode        String    @db.VarChar(20)
  alamat         String    @db.VarChar(45)
  keperluanPengajuan String @db.VarChar(255)
  idPengajuan    Int       @unique 
  
  pengajuanSurat PengajuanSurat @relation(fields: [idPengajuan], references: [id], onDelete: Cascade)
}

model SuratKeteranganLulus {
  id             Int       @id @default(autoincrement())
  namaLengkap    String    @db.VarChar(100)
  nrp            String    @db.VarChar(7)
  tanggalLulus   DateTime  @db.Timestamp()
  idPengajuan    Int       @unique 

  pengajuanSurat PengajuanSurat @relation(fields: [idPengajuan], references: [id], onDelete: Cascade)
}

model LaporanHasilStudi {
  id             Int       @id @default(autoincrement())
  namaLengkap    String    @db.VarChar(100)
  nrp            String    @db.VarChar(7)
  keperluanPembuatan String @db.VarChar(255)
  idPengajuan    Int       @unique 
  
  pengajuanSurat PengajuanSurat @relation(fields: [idPengajuan], references: [id], onDelete: Cascade)
}

model Notification {
  id              Int      @id @default(autoincrement())
  idPengajuan     Int      
  userId          String   @db.VarChar(7)       
  type            String   @db.VarChar(50)      
  message         String   @db.VarChar(255)     
  isRead          Boolean  @default(false)
  createdAt       DateTime @db.Timestamp() @default(now())

  pengajuanSurat  PengajuanSurat @relation(fields: [idPengajuan], references: [id], onDelete: Cascade)
  user            User           @relation(fields: [userId], references: [id], onDelete: Cascade)
}
